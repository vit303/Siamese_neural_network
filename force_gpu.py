import os
import ctypes

def verify_cudnn_installation():
    cuda_path = r"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6"
    
    print("=== –ü–†–û–í–ï–†–ö–ê –£–°–¢–ê–ù–û–í–ö–ò CUDNN ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
    required_files = {
        'bin': ['cudnn64_8.dll'],
        'include': ['cudnn.h'],
        'lib/x64': ['cudnn.lib']
    }
    
    all_files_exist = True
    
    for folder, files in required_files.items():
        for file in files:
            file_path = os.path.join(cuda_path, folder, file)
            if os.path.exists(file_path):
                print(f"‚úÖ {file} - –Ω–∞–π–¥–µ–Ω –≤ {folder}")
            else:
                print(f"‚ùå {file} - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ {folder}")
                all_files_exist = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É DLL
    print("\n=== –ü–†–û–í–ï–†–ö–ê –ó–ê–ì–†–£–ó–ö–ò DLL ===")
    try:
        cudnn_path = os.path.join(cuda_path, "bin", "cudnn64_8.dll")
        cudnn_dll = ctypes.WinDLL(cudnn_path)
        print("‚úÖ cudnn64_8.dll –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é cuDNN
        try:
            cudnn_version = ctypes.c_int()
            cudnn_dll.cudnnGetVersion(ctypes.byref(cudnn_version))
            print(f"‚úÖ –í–µ—Ä—Å–∏—è cuDNN: {cudnn_version.value}")
        except:
            print("‚ÑπÔ∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é cuDNN")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ cudnn64_8.dll: {e}")
        all_files_exist = False
    
    return all_files_exist

if __name__ == "__main__":
    success = verify_cudnn_installation()
    
    if success:
        print("\nüéâ cuDNN —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print("–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Python –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ TensorFlow:")
        print("import tensorflow as tf")
        print("print(tf.config.list_physical_devices('GPU'))")
    else:
        print("\n‚ùå cuDNN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print("–°–∫–∞—á–∞–π—Ç–µ –≤—Ä—É—á–Ω—É—é —Å: https://developer.nvidia.com/cudnn")